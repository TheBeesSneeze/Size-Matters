//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/MainControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainControls"",
    ""maps"": [
        {
            ""name"": ""StandardLayout"",
            ""id"": ""61180473-a5f1-4769-9000-974de01ae172"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""da04168f-936c-46dc-88c5-a2f580fd5474"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f8f81105-be23-4285-a088-881f63c4e749"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grow"",
                    ""type"": ""Button"",
                    ""id"": ""7bc8624e-05b0-4675-ae0f-b615a0816c0f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shrink"",
                    ""type"": ""Button"",
                    ""id"": ""988ba3b3-802c-41cd-a6a2-9ac290a8df37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""9336aabb-1955-4998-8448-c264a3460648"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""d2904e4b-ec23-48d6-8545-506e729af754"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pickup"",
                    ""type"": ""Button"",
                    ""id"": ""b15eb648-c404-4fbe-9ae7-b7479357a66a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Restart"",
                    ""type"": ""Button"",
                    ""id"": ""48838180-a09d-41ff-8476-c7d65c34b979"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d8ab8d3b-0f21-49c4-9be0-495ff44e94b2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8812c6c9-ff35-4201-94ca-2e8ec5794b1c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7bc4bc95-f932-47c5-97c3-ce5f7077990b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8fcbc063-a4aa-4d2d-b0e5-78afda30fcf3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""83924827-b612-478d-99f8-8307a452d2e2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bfdee962-2cce-44db-9505-840dc3bb587d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26f163c5-f6d0-4bc9-95be-1a8acd1651da"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Grow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fb4207a-62b5-43da-97f0-c4a38b9e6d72"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Shrink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58d644ba-52f7-4eeb-8db1-6cdd98e77ad9"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb63b871-0bc6-4130-a068-87ae51284bbc"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51617156-991f-4b15-b269-e82cf085ee60"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Pickup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b741f42-63a1-48f4-869b-d884db3566f5"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Default"",
            ""bindingGroup"": ""Default"",
            ""devices"": []
        }
    ]
}");
        // StandardLayout
        m_StandardLayout = asset.FindActionMap("StandardLayout", throwIfNotFound: true);
        m_StandardLayout_Movement = m_StandardLayout.FindAction("Movement", throwIfNotFound: true);
        m_StandardLayout_Jump = m_StandardLayout.FindAction("Jump", throwIfNotFound: true);
        m_StandardLayout_Grow = m_StandardLayout.FindAction("Grow", throwIfNotFound: true);
        m_StandardLayout_Shrink = m_StandardLayout.FindAction("Shrink", throwIfNotFound: true);
        m_StandardLayout_Look = m_StandardLayout.FindAction("Look", throwIfNotFound: true);
        m_StandardLayout_Quit = m_StandardLayout.FindAction("Quit", throwIfNotFound: true);
        m_StandardLayout_Pickup = m_StandardLayout.FindAction("Pickup", throwIfNotFound: true);
        m_StandardLayout_Restart = m_StandardLayout.FindAction("Restart", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // StandardLayout
    private readonly InputActionMap m_StandardLayout;
    private List<IStandardLayoutActions> m_StandardLayoutActionsCallbackInterfaces = new List<IStandardLayoutActions>();
    private readonly InputAction m_StandardLayout_Movement;
    private readonly InputAction m_StandardLayout_Jump;
    private readonly InputAction m_StandardLayout_Grow;
    private readonly InputAction m_StandardLayout_Shrink;
    private readonly InputAction m_StandardLayout_Look;
    private readonly InputAction m_StandardLayout_Quit;
    private readonly InputAction m_StandardLayout_Pickup;
    private readonly InputAction m_StandardLayout_Restart;
    public struct StandardLayoutActions
    {
        private @MainControls m_Wrapper;
        public StandardLayoutActions(@MainControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_StandardLayout_Movement;
        public InputAction @Jump => m_Wrapper.m_StandardLayout_Jump;
        public InputAction @Grow => m_Wrapper.m_StandardLayout_Grow;
        public InputAction @Shrink => m_Wrapper.m_StandardLayout_Shrink;
        public InputAction @Look => m_Wrapper.m_StandardLayout_Look;
        public InputAction @Quit => m_Wrapper.m_StandardLayout_Quit;
        public InputAction @Pickup => m_Wrapper.m_StandardLayout_Pickup;
        public InputAction @Restart => m_Wrapper.m_StandardLayout_Restart;
        public InputActionMap Get() { return m_Wrapper.m_StandardLayout; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(StandardLayoutActions set) { return set.Get(); }
        public void AddCallbacks(IStandardLayoutActions instance)
        {
            if (instance == null || m_Wrapper.m_StandardLayoutActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_StandardLayoutActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Grow.started += instance.OnGrow;
            @Grow.performed += instance.OnGrow;
            @Grow.canceled += instance.OnGrow;
            @Shrink.started += instance.OnShrink;
            @Shrink.performed += instance.OnShrink;
            @Shrink.canceled += instance.OnShrink;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Quit.started += instance.OnQuit;
            @Quit.performed += instance.OnQuit;
            @Quit.canceled += instance.OnQuit;
            @Pickup.started += instance.OnPickup;
            @Pickup.performed += instance.OnPickup;
            @Pickup.canceled += instance.OnPickup;
            @Restart.started += instance.OnRestart;
            @Restart.performed += instance.OnRestart;
            @Restart.canceled += instance.OnRestart;
        }

        private void UnregisterCallbacks(IStandardLayoutActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Grow.started -= instance.OnGrow;
            @Grow.performed -= instance.OnGrow;
            @Grow.canceled -= instance.OnGrow;
            @Shrink.started -= instance.OnShrink;
            @Shrink.performed -= instance.OnShrink;
            @Shrink.canceled -= instance.OnShrink;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Quit.started -= instance.OnQuit;
            @Quit.performed -= instance.OnQuit;
            @Quit.canceled -= instance.OnQuit;
            @Pickup.started -= instance.OnPickup;
            @Pickup.performed -= instance.OnPickup;
            @Pickup.canceled -= instance.OnPickup;
            @Restart.started -= instance.OnRestart;
            @Restart.performed -= instance.OnRestart;
            @Restart.canceled -= instance.OnRestart;
        }

        public void RemoveCallbacks(IStandardLayoutActions instance)
        {
            if (m_Wrapper.m_StandardLayoutActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IStandardLayoutActions instance)
        {
            foreach (var item in m_Wrapper.m_StandardLayoutActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_StandardLayoutActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public StandardLayoutActions @StandardLayout => new StandardLayoutActions(this);
    private int m_DefaultSchemeIndex = -1;
    public InputControlScheme DefaultScheme
    {
        get
        {
            if (m_DefaultSchemeIndex == -1) m_DefaultSchemeIndex = asset.FindControlSchemeIndex("Default");
            return asset.controlSchemes[m_DefaultSchemeIndex];
        }
    }
    public interface IStandardLayoutActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnGrow(InputAction.CallbackContext context);
        void OnShrink(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnQuit(InputAction.CallbackContext context);
        void OnPickup(InputAction.CallbackContext context);
        void OnRestart(InputAction.CallbackContext context);
    }
}
